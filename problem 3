class Solution:
    def lengthOfLongestSubstring(self, s: str) -> int:
        charSet= set()
        # initialize left pointer 
        l=0
        # keep track of max length
        result=0
        # r is right pointer to check for duplicates if 
        for r in range (len(s)):
            # check for duplicate character
            while s[r] in charSet:
                charSet.remove(s[l])
                l+=1
            #adding the rightmost non duplicate char to set    
            charSet.add(s[r])  
            # r-l+1 is window length
            result= max(result, r-l+1)  
        return result    
